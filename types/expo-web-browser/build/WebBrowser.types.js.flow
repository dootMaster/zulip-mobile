/* @flow
 * @generated by TsFlower
 */
export type RedirectEvent = { url: string, ... };
export type WebBrowserWindowFeatures = { [key: string]: number | boolean | string };

export type WebBrowserOpenOptions = {
    toolbarColor?: string,
    browserPackage?: string,
    enableBarCollapsing?: boolean,
    secondaryToolbarColor?: string,
    showTitle?: boolean,
    enableDefaultShareMenuItem?: boolean,
    showInRecents?: boolean,
    createTask?: boolean,
    controlsColor?: string,
    dismissButtonStyle?: "done" | "close" | "cancel",
    readerMode?: boolean,
    windowName?: string,
    windowFeatures?: string | WebBrowserWindowFeatures,
    ...
};

export type WebBrowserAuthSessionResult = WebBrowserRedirectResult | WebBrowserResult;

export type WebBrowserCustomTabsResults = {
    defaultBrowserPackage?: string,
    preferredBrowserPackage?: string,
    browserPackages: string[],
    servicePackages: string[],
    ...
};

declare export var WebBrowserResultType: {|
  /**
   * @platform ios
   */
  +CANCEL: 'cancel',
  /**
   * @platform ios
   */
  +DISMISS: 'dismiss',
  /**
   * @platform android
   */
  +OPENED: 'opened',
  +LOCKED: 'locked',
|}
export type WebBrowserResultTypeT = $Values<typeof WebBrowserResultType>;

export type WebBrowserResult = { type: WebBrowserResultTypeT, ... };

export type WebBrowserRedirectResult = {
    type: "success",
    url: string,
    ...
};

export type ServiceActionResult = { servicePackage?: string, ... };
export type WebBrowserMayInitWithUrlResult = ServiceActionResult;
export type WebBrowserWarmUpResult = ServiceActionResult;
export type WebBrowserCoolDownResult = ServiceActionResult;
export type WebBrowserCompleteAuthSessionOptions = { skipRedirectCheck?: boolean, ... };

export type WebBrowserCompleteAuthSessionResult = {
    type: "success" | "failed",
    message: string,
    ...
};
