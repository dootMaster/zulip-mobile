/* @flow
 * @generated by TsFlower
 */
import { type PermissionResponse } from './PermissionsInterface';
type RequestPermissionMethod<Permission: PermissionResponse> = () => Promise<Permission>;
type GetPermissionMethod<Permission: PermissionResponse> = () => Promise<Permission>;

declare interface PermissionHookMethods<Permission: PermissionResponse, Options = empty> {
  requestMethod: (options?: Options) => Promise<Permission>;
  getMethod: (options?: Options) => Promise<Permission>;
}

declare interface PermissionHookBehavior {
  get?: boolean;
  request?: boolean;
}

export type PermissionHookOptions<Options: { ... }> = PermissionHookBehavior & Options;

declare export function createPermissionHook<Permission: PermissionResponse, Options: { ... }>(
  methods: PermissionHookMethods<Permission, Options>,
): (
  options?: PermissionHookOptions<Options> | void,
) => [Permission | null, RequestPermissionMethod<Permission>, GetPermissionMethod<Permission>];

export {};
